- name: Install CentOS 7 into the new VMs on a VMware ESXi host
  hosts: targets
  gather_facts: false
  tasks:
    - name: Create new VMs on a VMware ESXi host
      local_action:
        module: vsphere_guest
        vcenter_hostname: "{{ esxi_host }}"
        username: "{{ esxi_user }}"
        password: "{{ esxi_pass }}"
        guest: "{{ vm_name }}"
        state: powered_on
        validate_certs: false
        vm_extra_config:
          vcpu.hotadd: yes
          mem.hotadd:  yes
        vm_disk:
          disk1:
            size_gb: 20
            type: thin
            datastore: "{{ vm_datastore }}"
            folder: disk1.vmdk
        vm_nic:
          nic1:
            type: vmxnet3
            network: bergenholm
            network_type: standard
        vm_hardware:
          memory_mb: 2048
          num_cpus: 2
          osid: centos64Guest
          scsi: paravirtual
        esxi:
          datacenter: ha-datacenter
          hostname: eval3
    - name: Check VMs from a VMware ESXi host
      local_action:
        module: vsphere_guest
        vcenter_hostname: "{{ esxi_host }}"
        username: "{{ esxi_user }}"
        password: "{{ esxi_pass }}"
        guest: "{{ vm_name }}"
        vmware_guest_facts: true
        validate_certs: false
        esxi:
          datacenter: ha-datacenter
          hostname: eval3
      register: newvm
    - name: Create new hosts in Bergenholm 
      local_action:
        module: bergenholm_host
        uuid: "{{ newvm.ansible_facts.hw_product_uuid }}"
        params:
          groups:
            - centos7
            - centos.amd64
          hostname: "{{ vm_name }}"
          ipaddr: "{{ vm_ipaddr }}"
          netif: ens192
        state: present
      notify:
        - Restart them and begin their installation
  handlers:
    - name: Restart them and begin their installation
      local_action:
        module: vsphere_guest
        vcenter_hostname: "{{ esxi_host }}"
        username: "{{ esxi_user }}"
        password: "{{ esxi_pass }}"
        guest: "{{ vm_name }}"
        state: restarted
        validate_certs: false

- name: Wait for OS installation
  hosts: targets
  gather_facts: false
  tasks:
    - name: Wait for SSH service
      wait_for_connection:
        sleep: 30
        timeout: 3600
    - name: Aquire facts
      setup:
    - name: Display OS information
      debug:
        msg: "{{ ansible_distribution }} {{ ansible_distribution_version }} ({{ansible_distribution_release}})" 
